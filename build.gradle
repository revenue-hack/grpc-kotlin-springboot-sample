group "com.grpc.sample"
version '1.0.0-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
        kotlin_version = '1.3.10'
        protobufVersion = '0.8.8'
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlin_version}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.google.protobuf:protobuf-gradle-plugin:${protobufVersion}"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.google.protobuf'
apply plugin: 'application'

def grpcVersion = '1.24.0'
def springBootVersion = '2.1.2.RELEASE'

repositories {
    mavenCentral()
    jcenter()
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.java.srcDirs += 'src/main/java'
    main.java.srcDirs += 'src/main/generated-proto'
}

dependencies {
    def kotlinVersion = plugins.findPlugin("org.jetbrains.kotlin.jvm").kotlinPluginVersion
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly "javax.annotation:javax.annotation-api:1.2"

    testImplementation "io.grpc:grpc-testing:${grpcVersion}" // gRCP testing utilities
    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:2.25.1"

    // spring-boot
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-actuator:${springBootVersion}"
    implementation "org.lognet:grpc-spring-boot-starter:2.3.2"
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.10.0'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    outputSubDir = 'generated-proto'
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = 'generated-proto'
                }
            }
        }
    }
    generatedFilesBaseDir = "${projectDir}/src/"
}


compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
    dependsOn('generateProto')
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
    dependsOn('generateProto')
}

clean {
    delete "${projectDir}/src/main/generated-proto"
}

bootJar {
    baseName = "grpc-kotlin-sprintboot-sample"
    version = "0.1.0"
}
